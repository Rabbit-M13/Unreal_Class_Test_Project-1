#define _CRT_SECURE_NO_WARNINGS // 전처리기

// Test_Project-1.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//

// 소스파일
// 주석 (Comment) : 프로그램에 영향을 끼치지 않은 부분 (컴파일러가 무시하는 문장)

/*
Ctrl + D : 한 줄 복제하기
Shift + Delete : 한 줄 삭제하기
Shift + 화살표: 블럭 잡기
Alt + Shift + 화살표: 세로로 블럭 잡기
Ctrl + Space : 자동완성 기능(인텔리센스) 창 띄우기
Alt + 위 or 아래키 : 현재 줄 위아래로 옮기기
프로그램 디버그 : <F5> 키 or [디버그] > [디버깅 시작] 메뉴
Ctrl + B + B : 프로젝트 빌드
Ctrl + B + R : 프로젝트 리빌드
*/  

/*
컴파일러: 번역기 - 사람이 쓴 코드를 기계가 알아듣게 번역
-> 목적코드 생성
    -> 링커가 연결해서 실행차일 생성
빌드 : 실행파일 생성하기
리빌드 : 싹 날리고 처음부터 다시 전체 빌드(정리 + 빌드)
 (+).pdb 파일 : 디버그를 가능하게 해주는 파일 !노출 시키면 안됨 => 해킹에 취약
*/

#include <iostream> // 입출력 관련
#include <stdio.h> 
#include <cstdio> // stdio.h에 네임스페이스 추가한 래퍼
#include "test_header.h" // 내가 생성한 header


// using namespace std;
// 교수님은 수업 시간에 잘 안쓸 예정 왜냐하면, 쓰는 애가 어디 있는지 알아야 하기 때문에 익숙할 때까지 그냥 쓰십시다.

int main() // 엔트리 포인트(코드가 시작되는 곳)
{
    printf("Hello\tWorld!\n");  // C 출력 방법 -> 언리얼에서도 얘를 써요
    printf("김우빈\t");        // ""안에 \n(이스케이프 시퀀스) 줄 바꿈
    printf("98년생입니다.\n");

    // 이스케이프 시퀀스
    // \n : 줄바꾸기(개행문자) new Line!
    // \t : 탭 넣기
    // \" : 쌍따옴표 한 개
    // \\ : 백슬래시 한 개
    // \r : 캐리지 리턴(윈도우에서는 X / 리눅스에서는 중요) :: 옛날 타자기의 잔재, 줄 바뀐 뒤 맨 앞으로 이동

    // std::cout << "Hello World!\n"; C++ 출력 방법 -> 얘를 안쓴다 왜냐, 언리얼은 위에 꺼 쓴다.

    int num = 0;
    scanf("%d", &num); // 원래 C 문법에는 맞으나, VS가 막는다. 왜냐, 다른 메모리를 침범할 여지가 있음
    printf("입력한 숫자는(C 스타일) : %d\n", num);

    std::cin >> num; // 숫자를 하나 입력 받기(C++ 스타일)
    printf("입력한 숫자는(C++ 스타일) : %d\n", num);

    // 프로그램을 실행했을 때 나이를 물어보고 입력받은 숫자를 그대로 출력
    int age = 0;
    printf("당신의 나이를 입력해주세요 : ");
    std::cin >> age;
    printf("당신의 나이는 : %d\n", age);
    


    return 0;
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
